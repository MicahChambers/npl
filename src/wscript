
def build(bld):
    bld.shlib(target = 'ndarray', source = 'ndarray.cpp')
    bld.shlib(target = 'slicer', source = 'slicer.cpp' )
    bld.shlib(target = 'ndimage', source = 'ndimage.cpp', use='ZLIB ndarray slicer')
    
    bld.program(target = 'test1', source = 'test1.cpp', use = 'ndarray')
    bld.program(target = 'test3', source = 'test3.cpp', use = 'ndimage')
    bld.program(target = 'test4', source = 'test4.cpp', use = 'ndimage')
    bld.program(target = 'slicer_test', source = 'slicer_test.cpp', use = 'slicer')
    
#    bld.program(target = 'nl_store_test1', 
#                source = 'nl_store_test1.cpp', 
#                use = 'ndarray')
#    
#    bld.program(target = 'nl_store_test2', 
#                source = 'nl_store_test2.cpp', 
#                use = 'ndarray')
#    
#    bld.program(target = 'nl_store_test3', 
#                source = 'nl_store_test3.cpp', 
#                use = 'ndarray')
#    
#    bld.program(target = 'nl_store_test4', 
#                source = 'nl_store_test4.cpp', 
#                use = 'ndarray')
    
    bld.program(target = 'store_test1', 
                source = 'store_test1.cpp', 
                use = 'ndarray')
    
    bld.program(target = 'store_test2', 
                source = 'store_test2.cpp', 
                use = 'ndarray')
    
    bld.program(target = 'store_test3', 
                source = 'store_test3.cpp', 
                use = 'ndarray')
    
    bld.program(target = 'store_test4', 
                source = 'store_test4.cpp', 
                use = 'ndarray')
    
    bld(cmd = '${SRC[0]}', features = 'etest', 
            source = ['slicer_test'], regex = 'PASS!')
