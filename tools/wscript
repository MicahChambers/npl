
def build(bld):
    # todo rename
    bld.program(target = 'deformJacobianMap', 
            install_path='${PREFIX}/tools_incomplete', 
            source = 'deformJacobianMap.cpp', 
            use = 'mrimage_utils tclap iterators accessors')
    bld.program(target = 'convertDeform', 
            install_path='${PREFIX}/tools_incomplete', 
            source = 'convertDeform.cpp', 
            use = 'mrimage_utils tclap iterators accessors')
    bld.program(target = 'copyOrientation', 
            source = 'copyOrientation.cpp', 
            use = 'mrimage_utils tclap')

    bld.program(target = 'nplGLM', 
            install_path='${PREFIX}/tools_incomplete', 
            source = 'generalLinearModel.cpp', 
            use = 'mrimage_utils statistics EIGEN tclap utility basic_plot')

    bld.program(target = 'nplICA',
            install_path='${PREFIX}/tools_incomplete', 
            source = 'fmri_ica.cpp',
            use = 'mrimage_utils statistics tclap');
    bld.program(target = 'niiHeader', 
            source = 'niiHeader.cpp', use = 'mrimage mrimage_utils')
    bld.program(target = 'nplReWrite', 
            source = 'touch.cpp', use = 'tclap mrimage mrimage_utils')
    bld.program(target = 'nplRemoveRegressors', 
            source = 'remove_regressors.cpp', 
            use = 'tclap mrimage mrimage_utils statistics')
    bld.program(target = 'nplRemoveVolumes', 
            source = 'extractTimePoints.cpp', 
            use = 'tclap mrimage mrimage_utils statistics')
#    bld.program(target = 'indexMapToOffsetMap', 
#            source = 'indexMapToOffsetMap.cpp', use = 'mrimage tclap kdtree kslicer')
#    
#    bld.program(target = 'applyDeform', 
#            source = 'applyDeform.cpp', use = 'mrimage tclap slicer')
#
#    bld.program(target = 'applyDeform', 
#            source = 'applyDeform.cpp', use = 'mrimage_utils tclap iterators accessors')
